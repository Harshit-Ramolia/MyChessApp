{"version":3,"sources":["components/Fallback.tsx","components/Drawer.tsx","components/GoogleLogin.tsx","components/Logout.tsx","components/Navbar.tsx","components/NavDrawerCombined.tsx","pages/Routes.tsx","pages/App.tsx","configuration/Theme.tsx","utils/CustomQueryUpdate.ts","configuration/urqlClient.ts","index.tsx","generated/graphql.tsx"],"names":["useStyles","makeStyles","theme","fallback","color","palette","secondary","main","Fallback","classes","CircularProgress","style","position","top","left","className","root","display","drawer","width","flexShrink","whiteSpace","zIndex","drawerPaper","overflowX","border","content","flexGrow","padding","spacing","AppDrawer","open","setOpen","handleClose","drawerBody","Fragment","Toolbar","List","to","onClick","ListItem","button","ListItemIcon","ListItemText","primary","Drawer","onClose","paper","GoogleLoginComponent","useLoginMutation","login","responseGoogle","response","a","token","tokenId","graphqlResponse","data","errors","console","log","clientId","buttonText","onSuccess","cookiePolicy","render","renderProps","Button","disabled","variant","startIcon","src","alt","LogoutComponent","useLogoutMutation","logout","logoutResponse","appBar","light","background","grow","menuButton","marginRight","title","fontSize","fontWeight","breakpoints","up","sectionDesktop","sectionMobile","PrimarySearchAppBar","useMeQuery","body","fetching","me","Typography","username","Logout","GoogleLogin","AppBar","elevation","IconButton","edge","aria-label","prev","noWrap","Hidden","smDown","NavDrawerCombined","children","useState","NavDrawerWrapper","React","lazy","Home","Playground","Game","Invitations","History","Routes","path","exact","App","createMuiTheme","error","red","A400","CustomUpdateQuery","cache","qi","result","fn","updateQuery","SERVER_URL","process","subscriptionClient","SubscriptionClient","reconnect","client","createClient","url","fetchOptions","credentials","exchanges","dedupExchange","subscriptionExchange","forwardSubscription","operation","request","cacheExchange","updates","Mutation","args","info","query","MeDocument","loginResult","user","GameStatusDocument","gameStatus","GameStatus","invalidate","invite","invitationResponse","acceptInvitation","InvitationResult","invalidateQuery","InvalidateQueryResult","endGame","Result","cancelInvitation","fetchExchange","ReactDOM","StrictMode","value","ThemeProvider","Theme","document","getElementById","ErrorFragmentFragmentDoc","gql","UserFragmentFragmentDoc","CancelInvitationDocument","useCancelInvitationMutation","Urql","AcceptInvitationDocument","useAcceptInvitationMutation","EndGameDocument","useEndGameMutation","InvalidateQueryDocument","useInvalidateQueryMutation","InviteDocument","useInviteMutation","LoginDocument","LogoutDocument","SaveMoveDocument","useSaveMoveMutation","options","CurrentGameDocument","useCurrentGameQuery","useGameStatusQuery","HistoryDocument","useHistoryQuery","InvitationsDocument","useInvitationsQuery","GameStartedDocument","useGameStartedSubscription","handler","MoveDocument","useMoveSubscription","NewInvitationDocument","useNewInvitationSubscription"],"mappings":"gNAIMA,EAAYC,aAAW,SAACC,GAAD,MAAkB,CAC7CC,SAAU,CACRC,MAAOF,EAAMG,QAAQC,UAAUC,UAgBpBC,MAZf,WACE,IAAMC,EAAUT,IAChB,OACE,8BACE,cAACU,EAAA,EAAD,CACEC,MAAO,CAAEC,SAAU,QAASC,IAAK,MAAOC,KAAM,OAC9CC,UAAWN,EAAQN,c,mJCIrBH,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9Cc,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,MAPgB,IAQhBC,WAAY,EACZC,WAAY,SACZC,OAAQ,KAEVC,YAAa,CACXJ,MAbgB,IAchBK,UAAW,SACXC,OAAQ,QAEVC,QAAS,CACPC,SAAU,EACVC,QAAS1B,EAAM2B,QAAQ,QASZ,SAASC,EAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAClCvB,EAAUT,IACViC,EAAc,WAClBD,GAAQ,IAEJE,EACJ,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,IACA,8BACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,QAASN,EAAtB,SACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,cAG3B,cAAC,IAAD,CAAMN,GAAG,QAAQC,QAASN,EAA1B,SACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,cAG3B,cAAC,IAAD,CAAMN,GAAG,cAAcC,QAASN,EAAhC,SACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,oBAG3B,cAAC,IAAD,CAAMN,GAAG,eAAeC,QAASN,EAAjC,SACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,qBAG3B,cAAC,IAAD,CAAMN,GAAG,WAAWC,QAASN,EAA7B,SACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,yBAQnC,OACE,cAACC,EAAA,EAAD,CACEd,KAAMA,EACNhB,UAAWN,EAAQS,OACnBP,MAAO,CAAEW,OAAQ,KACjBwB,QAASb,EACTxB,QAAS,CACPsC,MAAOtC,EAAQc,aANnB,SASGW,I,yGC1DQc,EA5Cc,WAC3B,MAAkBC,cAATC,EAAT,oBAMA,IAAMC,EAAc,uCAAG,WACrBC,GADqB,mBAAAC,EAAA,2DAHd,eAMmBD,GAHL,gCAISF,EAAM,CAAEI,MAAOF,EAASG,UAJjC,OAIfC,EAJe,QAKnB,UAAIA,EAAgBC,YAApB,aAAI,EAAsBP,MAAMQ,SAE9BC,QAAQC,IAAR,UAAYJ,EAAgBC,YAA5B,aAAY,EAAsBP,MAAMQ,QAPvB,2CAAH,sDAcpB,OACE,cAAC,cAAD,CACEG,SAAS,2EACTC,WAAW,QACXC,UAAWZ,EACXa,aAAc,qBACdC,OAAQ,SAACC,GAAD,OACN,cAACC,EAAA,EAAD,CACE5B,QAAS2B,EAAY3B,QACrB6B,SAAUF,EAAYE,SACtBC,QAAQ,WACRjE,MAAM,YACNkE,UACE,qBAAKC,IAAI,uBAAuB5D,MAAO,CAAEQ,MAAO,QAAUqD,IAAI,KANlE,uBCnBOC,EAdS,WACtB,MAAmBC,cAAVC,EAAT,oBACA,OACE,cAACR,EAAA,EAAD,CAAQ5B,QAAO,sBAAE,8BAAAc,EAAA,sEACYsB,IADZ,OACXC,EADW,QAEX,UAACA,EAAenB,YAAhB,aAAC,EAAqBkB,SACxBhB,QAAQC,IAAI,SAHC,2CAKdxD,MAAM,YALT,qB,SCOEJ,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C2E,OAAQ,CACNvD,OAAQpB,EAAMoB,OAAOJ,OAAS,EAC9Bd,MAAOF,EAAMG,QAAQC,UAAUwE,MAC/BC,WAAY7E,EAAMG,QAAQuC,QAAQrC,MAEpCyE,KAAM,CACJrD,SAAU,GAEZsD,WAAY,CACVC,YAAahF,EAAM2B,QAAQ,IAE7BsD,MAAM,aACJC,SAAU,OACVC,WAAY,KACXnF,EAAMoF,YAAYC,GAAG,MAAQ,CAC5BtE,QAAS,QACTmE,SAAU,SAGdI,eAAe,aACbvE,QAAS,QACRf,EAAMoF,YAAYC,GAAG,MAAQ,CAC5BtE,QAAS,SAGbwE,cAAc,aACZxE,QAAS,QACRf,EAAMoF,YAAYC,GAAG,MAAQ,CAC5BtE,QAAS,aASA,SAASyE,EAAT,GAAwD,IAAzB1D,EAAwB,EAAxBA,QACtCvB,EAAUT,IAChB,EAA6B2F,cAA7B,sBAASlC,EAAT,EAASA,KACLmC,EAAO,KAaX,OAdA,EAAeC,WAMXD,GAHE,OAACnC,QAAD,IAACA,OAAD,EAACA,EAAMqC,IAIP,eAAC,IAAM3D,SAAP,WACE,cAAC4D,EAAA,EAAD,UAAatC,EAAKqC,GAAGE,WACrB,cAACC,EAAD,OALG,cAACC,EAAD,KAWT,qBAAKnF,UAAWN,EAAQuE,KAAxB,SACE,cAACmB,EAAA,EAAD,CAAQvF,SAAS,QAAQG,UAAWN,EAAQoE,OAAQuB,UAAW,EAA/D,SACE,eAAChE,EAAA,EAAD,WACE,cAACiE,EAAA,EAAD,CACEC,KAAK,QACLvF,UAAWN,EAAQwE,WACnB7E,MAAM,UACNmG,aAAW,cACXhE,QAAS,WACPP,GAAQ,SAACwE,GAAD,OAAoBA,MANhC,SASE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAMlE,GAAG,IAAT,SACE,cAACyD,EAAA,EAAD,CAAYhF,UAAWN,EAAQ0E,MAAOd,QAAQ,KAAKoC,QAAM,EAAzD,0BAIF,qBAAK1F,UAAWN,EAAQuE,OACvBY,EACD,cAACc,EAAA,EAAD,CAAQC,QAAM,EAAd,SACA,qBAAKhG,MAAO,CAAEQ,MAAO,oBCrF/B,IAUeyF,EAV6C,SAAC,GAAiB,EAAfC,SAAgB,IAC7E,EAAwBC,oBAAkB,GAA1C,mBAAO/E,EAAP,KAAaC,EAAb,KACA,OACE,eAAC,IAAMG,SAAP,WACE,cAAC,EAAD,CAAQH,QAASA,IACjB,cAAC,EAAD,CAAQD,KAAMA,EAAMC,QAASA,QCC7B+E,EAAmBC,IAAMC,MAAK,kBAAM,iCACpCC,EAAOF,IAAMC,MAAK,kBAAM,iCACxBE,EAAaH,IAAMC,MAAK,kBAAM,wDAC9BG,GAAOJ,IAAMC,MAAK,kBAAM,+DACxBI,GAAcL,IAAMC,MAAK,kBAAM,iCAC/BK,GAAUN,IAAMC,MAAK,kBAAM,8DAmClBM,OAjCf,WAEE,OACE,cAAC,IAAMpF,SAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUhC,SAAUK,EAApB,SACE,cAACuG,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,EAA/B,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,QAAQC,OAAK,EAAzB,SACE,cAACL,GAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,eAAeC,OAAK,EAAhC,SACE,cAACJ,GAAD,MAEF,cAAC,IAAD,CAAOG,KAAK,WAAWC,OAAK,EAA5B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAUnF,GAAG,mBC/BZoF,OARf,WACE,OACE,cAAC,IAAMvF,SAAP,UACE,cAAC,GAAD,O,kBCcSjC,GAjBDyH,aAAe,CAC3BtH,QAAS,CACPuC,QAAS,CACPrC,KAAM,UACNuE,MAAO,WAETxE,UAAW,CACTC,KAAM,UACNuE,MAAO,UAET8C,MAAO,CACLrH,KAAMsH,KAAIC,OAGdjG,QAAS,K,8CChBJ,SAASkG,GACdC,EACAC,EACAC,EACAC,GAEA,OAAOH,EAAMI,YAAYH,GAAI,SAACxE,GAAD,OAAU0E,EAAGD,EAAQzE,MCWpD,IAAM4E,GAAaC,qCAEbC,GAAqB,IAAIC,sBAAJ,eAA+BH,IAAc,CACtEI,WAAW,IA6JEC,GA1JAC,aAAa,CAC1BC,IAAI,WAAD,OAAaP,IAChBQ,aAAc,CACZC,YAAa,WAEfC,UAAW,CACTC,KACAC,aAAqB,CACnBC,oBADmB,SACCC,GAClB,OAAOZ,GAAmBa,QAAQD,MAGtCE,aAAc,CACZC,QAAS,CACPC,SAAU,CACRrG,MAAO,SAACgF,EAAQsB,EAAMxB,EAAOyB,GAC3B1B,GACEC,EACA,CAAE0B,MAAOC,KACTzB,GACA,SAAC0B,EAAaF,GACZ,OAAIE,EAAY1G,MAAMQ,OACbgG,EAEA,CAAE5D,GAAE,UAAE8D,EAAY1G,aAAd,aAAE,EAAmB2G,MAD1B,IAAD,KAKX9B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAAC0B,EAAaF,GAAW,IAAD,IACtB,OAA2C,OAAvC,UAAAE,EAAY1G,aAAZ,mBAAmB2G,YAAnB,eAAyBE,YACpBL,EAEA,CAAEM,WAAYJ,EAAY1G,MAAM2G,KAAKE,eAIlD/B,EAAMiC,WAAW,QAAS,qBAC1BjC,EAAMiC,WAAW,QAAS,gBAC1BjC,EAAMiC,WAAW,QAAS,gBAE5BtF,OAAQ,SAACuD,EAAQsB,EAAMxB,EAAOyB,GAC5B1B,GACEC,EACA,CAAE0B,MAAOC,KACTzB,GACA,SAACtD,EAAgB8E,GACf,OAAK9E,EAAeD,OAGX,CAAEmB,GAAI,MAFN4D,KAMb3B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACtD,EAAgB8E,GACf,OAAK9E,EAAeD,OAGX,CAAEqF,YAAa,GAFfN,KAMb1B,EAAMiC,WAAW,QAAS,qBAC1BjC,EAAMiC,WAAW,QAAS,gBAC1BjC,EAAMiC,WAAW,QAAS,gBAE5BC,OAAQ,SAAChC,EAAQsB,EAAMxB,EAAOyB,GAC5B1B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACiC,EAAoBT,GACnB,OAAIS,EAAmBD,OAAOxG,OACrBgG,EAEA,CAAEM,WAAY,OAK7BI,iBAAkB,SAAClC,EAAQsB,EAAMxB,EAAOyB,GACtC1B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACmC,EAAkBX,GACjB,OAA0C,IAAtCW,EAAiBD,iBACZV,EAEA,CAAEM,WAAY,MAI3BhC,EAAMiC,WAAW,QAAS,qBAC1BjC,EAAMiC,WAAW,QAAS,gBAE5BK,gBAAiB,SAACpC,EAAQsB,EAAMxB,EAAOyB,GACrCzB,EAAMiC,WAAW,QAAS,qBAC1BjC,EAAMiC,WAAW,QAAS,eAC1BlC,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACqC,EAAuBb,GACtB,MAAqD,kBAA1Ca,EAAsBD,gBACxBZ,EAEA,CAAEM,WAAYO,EAAsBD,qBAKnDE,QAAS,SAACtC,EAAQsB,EAAMxB,EAAOyB,GAC7B1B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACuC,EAAQf,GACP,OAAKe,EAAOD,QAGH,CAAER,WAAY,GAFdN,MAOfgB,iBAAkB,SAACxC,EAAQsB,EAAMxB,EAAOyB,GACtC1B,GACEC,EACA,CAAE0B,MAAOI,KACT5B,GACA,SAACuC,EAAQf,GACP,OAAKe,EAAOC,iBAGH,CAAEV,WAAY,GAFdN,UAUrBiB,QCtKJC,IAAS3G,OACP,cAAC,IAAM4G,WAAP,UACE,cAAC,KAAD,CAAUC,MAAOpC,GAAjB,SACE,cAACqC,GAAA,EAAD,CAAe7K,MAAO8K,GAAtB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,U,+sBCiWbC,EAA2BC,YAAH,mGAMxBC,EAA0BD,YAAH,uHAQvBE,EAA2BF,YAAH,wFAM9B,SAASG,IACd,OAAOC,IAA8EF,GAEhF,IAAMG,EAA2BL,YAAH,2HAM9B,SAASM,IACd,OAAOF,IAA8EC,GAEhF,IAAME,EAAkBP,YAAH,4GAMrB,SAASQ,IACd,OAAOJ,IAA4DG,GAE9D,IAAME,EAA0BT,YAAH,sFAM7B,SAASU,IACd,OAAON,IAA4EK,GAE9E,IAAME,EAAiBX,YAAH,0JAQrBD,GAEC,SAASa,IACd,OAAOR,IAA0DO,GAE5D,IAAME,EAAgBb,YAAH,uMAWpBD,EACJE,GAEK,SAASpI,IACd,OAAOuI,IAAwDS,GAE1D,IAAMC,EAAiBd,YAAH,oEAMpB,SAAS1G,IACd,OAAO8G,IAA0DU,GAE5D,IAAMC,EAAmBf,YAAH,oLAMtB,SAASgB,IACd,OAAOZ,IAA8DW,GAEhE,IAAMxC,EAAayB,YAAH,uFAMjBC,GAEC,SAAS1F,IAA8E,IAAnE0G,EAAkE,uDAAJ,GACvF,OAAOb,IAAA,aAAyB9B,MAAOC,GAAe0C,IAEjD,IAAMC,EAAsBlB,YAAH,qMAa1BC,GAEC,SAASkB,IAAgG,IAA5EF,EAA2E,uDAAJ,GACzG,OAAOb,IAAA,aAAkC9B,MAAO4C,GAAwBD,IAEnE,IAAMvC,EAAqBsB,YAAH,yEAMxB,SAASoB,IAA8F,IAA3EH,EAA0E,uDAAJ,GACvG,OAAOb,IAAA,aAAiC9B,MAAOI,GAAuBuC,IAEjE,IAAMI,EAAkBrB,YAAH,wNActBC,GAEC,SAASqB,IAAwF,IAAxEL,EAAuE,uDAAJ,GACjG,OAAOb,IAAA,aAA8B9B,MAAO+C,GAAoBJ,IAE3D,IAAMM,EAAsBvB,YAAH,gLAW1BC,GAEC,SAASuB,IAAgG,IAA5EP,EAA2E,uDAAJ,GACzG,OAAOb,IAAA,aAAkC9B,MAAOiD,GAAwBN,IAEnE,IAAMQ,EAAsBzB,YAAH,yGAMzB,SAAS0B,KAA0N,IAA9JT,EAA6J,uDAAxE,GAAIU,EAAoE,uCACvO,OAAOvB,IAAA,aAAyF9B,MAAOmD,GAAwBR,GAAWU,GAErI,IAAMC,GAAe5B,YAAH,2FAMlB,SAAS6B,KAA8L,IAAhJZ,EAA+I,uDAAjE,GAAIU,EAA6D,uCAC3M,OAAOvB,IAAA,aAA2E9B,MAAOsD,IAAiBX,GAAWU,GAEhH,IAAMG,GAAwB9B,YAAH,4MAW5BC,GAEC,SAAS8B,KAAkO,IAAlKd,EAAiK,uDAA1E,GAAIU,EAAsE,uCAC/O,OAAOvB,IAAA,aAA6F9B,MAAOwD,IAA0Bb,GAAWU,M","file":"static/js/main.f1f36f92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CircularProgress, Theme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme:Theme) => ({\r\n  fallback: {\r\n    color: theme.palette.secondary.main,\r\n  }\r\n}))\r\n\r\nfunction Fallback() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <CircularProgress\r\n        style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}\r\n        className={classes.fallback}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fallback;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Theme,\r\n  Toolbar,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport ChangeHistoryIcon from \"@material-ui/icons/ChangeHistory\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    zIndex: 100,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    overflowX: \"hidden\",\r\n    border: \"none\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\ninterface DrawerProps {\r\n  open: boolean;\r\n  setOpen: Function;\r\n}\r\n\r\nexport default function AppDrawer({ open, setOpen }: DrawerProps) {\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const drawerBody = (\r\n    <React.Fragment>\r\n      <Toolbar />\r\n      <div>\r\n        <List>\r\n          <Link to=\"/\" onClick={handleClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Home\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/game\" onClick={handleClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PlayArrowIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Game\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/playground\" onClick={handleClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ChangeHistoryIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Playground\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/invitations\" onClick={handleClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <EventAvailableIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Invitations\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/history\" onClick={handleClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <HistoryIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"History\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Drawer\r\n      open={open}\r\n      className={classes.drawer}\r\n      style={{ zIndex: 100 }}\r\n      onClose={handleClose}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      {drawerBody}\r\n    </Drawer>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  GoogleLogin,\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n} from \"react-google-login\";\r\nimport { useLoginMutation } from \"../generated/graphql\";\r\n\r\nconst GoogleLoginComponent = () => {\r\n  const [, login] = useLoginMutation();\r\n\r\n  function isGoogleLoginResponse(object: any): object is GoogleLoginResponse {\r\n    return \"profileObj\" in object;\r\n  }\r\n\r\n  const responseGoogle = async (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if (isGoogleLoginResponse(response)) {\r\n      let graphqlResponse = await login({ token: response.tokenId });\r\n      if (graphqlResponse.data?.login.errors) {\r\n        //   Error\r\n        console.log(graphqlResponse.data?.login.errors)\r\n      } else {\r\n        //   Login successful\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GoogleLogin\r\n      clientId=\"343751366568-6gqpsmkdmb2d8oh0ghkkohhirgmrjge6.apps.googleusercontent.com\"\r\n      buttonText=\"Login\"\r\n      onSuccess={responseGoogle}\r\n      cookiePolicy={\"single_host_origin\"}\r\n      render={(renderProps) => (\r\n        <Button\r\n          onClick={renderProps.onClick}\r\n          disabled={renderProps.disabled}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            <img src=\"icons/Google_'G'.png\" style={{ width: \"18px\" }} alt=\"\" />\r\n          }\r\n        >\r\n          Login\r\n        </Button>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GoogleLoginComponent;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useLogoutMutation } from \"../generated/graphql\";\r\n\r\nconst LogoutComponent = () => {\r\n  const [, logout] = useLogoutMutation();\r\n  return (\r\n    <Button onClick={async () => {\r\n      let logoutResponse = await logout();\r\n      if (!logoutResponse.data?.logout) {\r\n        console.log(\"Error\")\r\n      }\r\n    }} color=\"secondary\">\r\n      Logout\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutComponent;\r\n","import React from \"react\";\r\nimport { Theme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleLoginComponent from \"./GoogleLogin\";\r\nimport { useMeQuery } from \"../generated/graphql\";\r\nimport LogoutComponent from \"./Logout\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.secondary.light,\r\n    background: theme.palette.primary.main,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontSize: \"18px\",\r\n    fontWeight: 800,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n      fontSize: \"22px\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\ninterface NavbarProps {\r\n  setOpen: Function;\r\n}\r\n\r\nexport default function PrimarySearchAppBar({ setOpen }: NavbarProps) {\r\n  const classes = useStyles();\r\n  const [{ data, fetching }] = useMeQuery();\r\n  let body = null;\r\n  if (!fetching) {\r\n    if (!data?.me) {\r\n      body = <GoogleLoginComponent />;\r\n    } else {\r\n      body = (\r\n        <React.Fragment>\r\n          <Typography>{data.me.username}</Typography>\r\n          <LogoutComponent />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\" className={classes.appBar} elevation={0}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => {\r\n              setOpen((prev: Boolean) => !prev);\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link to=\"/\">\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              MYCHESSAPP\r\n            </Typography>\r\n          </Link>\r\n          <div className={classes.grow} />\r\n          {body}\r\n          <Hidden smDown>\r\n          <div style={{ width: \"100px\" }}></div>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Drawer from \"./Drawer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\ninterface NavDrawerCombinedProps {}\r\n\r\nconst NavDrawerCombined: React.FC<NavDrawerCombinedProps> = ({ children }) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar setOpen={setOpen} />\r\n      <Drawer open={open} setOpen={setOpen}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavDrawerCombined;\r\n","import React, { Suspense } from \"react\";\r\n// import React, { Suspense } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Fallback from \"../components/Fallback\";\r\n\r\nimport NavDrawerCombined from \"../components/NavDrawerCombined\";\r\n\r\nconst NavDrawerWrapper = React.lazy(() => import(\"../components/Wrapper\"));\r\nconst Home = React.lazy(() => import(\"./home\"));\r\nconst Playground = React.lazy(() => import(\"./playground\"));\r\nconst Game = React.lazy(() => import(\"./game\"));\r\nconst Invitations = React.lazy(() => import(\"./invitations\"));\r\nconst History = React.lazy(() => import(\"./history\"));\r\n\r\nfunction Routes() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <NavDrawerCombined />\r\n        <Suspense fallback={Fallback}>\r\n          <NavDrawerWrapper>\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/playground\" exact>\r\n                <Playground />\r\n              </Route>\r\n              <Route path=\"/game\" exact>\r\n                <Game />\r\n              </Route>\r\n              <Route path=\"/invitations\" exact>\r\n                <Invitations />\r\n              </Route>\r\n              <Route path=\"/history\" exact>\r\n                <History />\r\n              </Route>\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </NavDrawerWrapper>\r\n        </Suspense>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Routes />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1A1A1D\",\n      light: \"#F9F9F9\",\n    },\n    secondary: {\n      main: \"#E98074\",\n      light: \"#fffff\",\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n  spacing: 10,\n});\n\nexport default theme;\n","import { Cache, QueryInput } from \"@urql/exchange-graphcache\";\r\n\r\nexport function CustomUpdateQuery<Result, Query>(\r\n  cache: Cache,\r\n  qi: QueryInput,\r\n  result: any,\r\n  fn: (r: Result, q: Query) => Query\r\n) {\r\n  return cache.updateQuery(qi, (data) => fn(result, data as any) as any);\r\n}\r\n","import { createClient, dedupExchange, fetchExchange } from \"urql\";\r\nimport { subscriptionExchange } from \"urql\";\r\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\r\nimport { cacheExchange } from \"@urql/exchange-graphcache\";\r\nimport {\r\n  AcceptInvitationMutation,\r\n  CancelInvitationMutation,\r\n  EndGameMutation,\r\n  GameStatusDocument,\r\n  GameStatusQuery,\r\n  InvalidateQueryMutation,\r\n  InviteMutation,\r\n  LoginMutation,\r\n  LogoutMutation,\r\n  MeDocument,\r\n  MeQuery,\r\n} from \"../generated/graphql\";\r\nimport { CustomUpdateQuery } from \"../utils/CustomQueryUpdate\";\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst subscriptionClient = new SubscriptionClient(`ws://${SERVER_URL}`, {\r\n  reconnect: true,\r\n});\r\n\r\nconst client = createClient({\r\n  url: `https://${SERVER_URL}`,\r\n  fetchOptions: {\r\n    credentials: \"include\",\r\n  },\r\n  exchanges: [\r\n    dedupExchange,\r\n    subscriptionExchange({\r\n      forwardSubscription(operation) {\r\n        return subscriptionClient.request(operation);\r\n      },\r\n    }),\r\n    cacheExchange({\r\n      updates: {\r\n        Mutation: {\r\n          login: (result, args, cache, info) => {\r\n            CustomUpdateQuery<LoginMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              result,\r\n              (loginResult, query) => {\r\n                if (loginResult.login.errors) {\r\n                  return query;\r\n                } else {\r\n                  return { me: loginResult.login?.user };\r\n                }\r\n              }\r\n            );\r\n            CustomUpdateQuery<LoginMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (loginResult, query) => {\r\n                if (loginResult.login?.user?.gameStatus == null) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: loginResult.login.user.gameStatus };\r\n                }\r\n              }\r\n            );\r\n            cache.invalidate(\"Query\", \"invitationsOfUser\");\r\n            cache.invalidate(\"Query\", \"historyGames\");\r\n            cache.invalidate(\"Query\", \"currentGame\");\r\n          },\r\n          logout: (result, args, cache, info) => {\r\n            CustomUpdateQuery<LogoutMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              result,\r\n              (logoutResponse, query) => {\r\n                if (!logoutResponse.logout) {\r\n                  return query;\r\n                } else {\r\n                  return { me: null };\r\n                }\r\n              }\r\n            );\r\n            CustomUpdateQuery<LogoutMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (logoutResponse, query) => {\r\n                if (!logoutResponse.logout) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: -1 };\r\n                }\r\n              }\r\n            );\r\n            cache.invalidate(\"Query\", \"invitationsOfUser\");\r\n            cache.invalidate(\"Query\", \"historyGames\");\r\n            cache.invalidate(\"Query\", \"currentGame\");\r\n          },\r\n          invite: (result, args, cache, info) => {\r\n            CustomUpdateQuery<InviteMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (invitationResponse, query) => {\r\n                if (invitationResponse.invite.errors) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: 1 };\r\n                }\r\n              }\r\n            );\r\n          },\r\n          acceptInvitation: (result, args, cache, info) => {\r\n            CustomUpdateQuery<AcceptInvitationMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (InvitationResult, query) => {\r\n                if (InvitationResult.acceptInvitation === false) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: 2 };\r\n                }\r\n              }\r\n            );\r\n            cache.invalidate(\"Query\", \"invitationsOfUser\");\r\n            cache.invalidate(\"Query\", \"currentGame\");\r\n          },\r\n          invalidateQuery: (result, args, cache, info) => {\r\n            cache.invalidate(\"Query\", \"invitationsOfUser\");\r\n            cache.invalidate(\"Query\", \"currentGame\");\r\n            CustomUpdateQuery<InvalidateQueryMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (InvalidateQueryResult, query) => {\r\n                if (typeof InvalidateQueryResult.invalidateQuery !== \"number\") {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: InvalidateQueryResult.invalidateQuery };\r\n                }\r\n              }\r\n            );\r\n          },\r\n          endGame: (result, args, cache, info) => {\r\n            CustomUpdateQuery<EndGameMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (Result, query) => {\r\n                if (!Result.endGame) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: 0 };\r\n                }\r\n              }\r\n            );\r\n          },\r\n          cancelInvitation: (result, args, cache, info) => {\r\n            CustomUpdateQuery<CancelInvitationMutation, GameStatusQuery>(\r\n              cache,\r\n              { query: GameStatusDocument },\r\n              result,\r\n              (Result, query) => {\r\n                if (!Result.cancelInvitation) {\r\n                  return query;\r\n                } else {\r\n                  return { GameStatus: 0 };\r\n                }\r\n              }\r\n            );\r\n          },\r\n        },\r\n      },\r\n    }),\r\n    fetchExchange,\r\n  ],\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport Theme from \"./configuration/Theme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Provider } from \"urql\";\nimport client from \"./configuration/urqlClient\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider value={client}>\n      <ThemeProvider theme={Theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any;\n};\n\nexport type ChessClass = {\n  __typename?: 'ChessClass';\n  _id: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  white: UserClass;\n  black: UserClass;\n  firstPosition?: Maybe<PositionClass>;\n  isGameRunning: Scalars['Boolean'];\n  listOfPositions?: Maybe<Array<Scalars['String']>>;\n  lastPosition?: Maybe<Scalars['String']>;\n};\n\nexport type ChessResponse = {\n  __typename?: 'ChessResponse';\n  errors?: Maybe<Array<FieldError>>;\n  chess?: Maybe<ChessClass>;\n};\n\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type InvitationClass = {\n  __typename?: 'InvitationClass';\n  _id: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  host: UserClass;\n  friend: UserClass;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  login: UserResponse;\n  logout: Scalars['Boolean'];\n  invite: UserResponse;\n  invalidateQuery: Scalars['Float'];\n  saveMove: Scalars['Boolean'];\n  endGame: Scalars['Boolean'];\n  cancelInvitation: Scalars['Boolean'];\n  acceptInvitation: Scalars['Boolean'];\n};\n\n\nexport type MutationLoginArgs = {\n  token: Scalars['String'];\n};\n\n\nexport type MutationInviteArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationSaveMoveArgs = {\n  move: Scalars['String'];\n  position: Scalars['String'];\n  chessID: Scalars['String'];\n};\n\n\nexport type MutationEndGameArgs = {\n  chessID: Scalars['String'];\n};\n\n\nexport type MutationAcceptInvitationArgs = {\n  hostID: Scalars['String'];\n};\n\nexport type PositionClass = {\n  __typename?: 'PositionClass';\n  _id: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  chessID?: Maybe<Scalars['String']>;\n  data?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  me?: Maybe<UserClass>;\n  users: Array<UserClass>;\n  userByID?: Maybe<UserClass>;\n  GameStatus: Scalars['Int'];\n  currentGame?: Maybe<ChessClass>;\n  createNewChess: ChessResponse;\n  allChess: Array<ChessClass>;\n  historyGames?: Maybe<Array<ChessClass>>;\n  invitationsOfUser?: Maybe<Array<InvitationClass>>;\n};\n\n\nexport type QueryUserByIdArgs = {\n  id: Scalars['String'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  move?: Maybe<Scalars['String']>;\n  gameStarted?: Maybe<Scalars['Boolean']>;\n  newInvitation?: Maybe<InvitationClass>;\n};\n\n\nexport type SubscriptionMoveArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionGameStartedArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionNewInvitationArgs = {\n  id: Scalars['String'];\n};\n\nexport type UserClass = {\n  __typename?: 'UserClass';\n  _id: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  gameStatus: Scalars['Float'];\n  currentGame?: Maybe<Scalars['String']>;\n};\n\nexport type UserResponse = {\n  __typename?: 'UserResponse';\n  errors?: Maybe<Array<FieldError>>;\n  user?: Maybe<UserClass>;\n};\n\nexport type ErrorFragmentFragment = (\n  { __typename?: 'FieldError' }\n  & Pick<FieldError, 'field' | 'message'>\n);\n\nexport type UserFragmentFragment = (\n  { __typename?: 'UserClass' }\n  & Pick<UserClass, '_id' | 'username' | 'email' | 'gameStatus'>\n);\n\nexport type CancelInvitationMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CancelInvitationMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'cancelInvitation'>\n);\n\nexport type AcceptInvitationMutationVariables = Exact<{\n  hostID: Scalars['String'];\n}>;\n\n\nexport type AcceptInvitationMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'acceptInvitation'>\n);\n\nexport type EndGameMutationVariables = Exact<{\n  chessID: Scalars['String'];\n}>;\n\n\nexport type EndGameMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'endGame'>\n);\n\nexport type InvalidateQueryMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type InvalidateQueryMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'invalidateQuery'>\n);\n\nexport type InviteMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type InviteMutation = (\n  { __typename?: 'Mutation' }\n  & { invite: (\n    { __typename?: 'UserResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'FieldError' }\n      & ErrorFragmentFragment\n    )>> }\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  token: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'UserResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'FieldError' }\n      & ErrorFragmentFragment\n    )>>, user?: Maybe<(\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    )> }\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type SaveMoveMutationVariables = Exact<{\n  chessID: Scalars['String'];\n  position: Scalars['String'];\n  move: Scalars['String'];\n}>;\n\n\nexport type SaveMoveMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'saveMove'>\n);\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'UserClass' }\n    & UserFragmentFragment\n  )> }\n);\n\nexport type CurrentGameQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CurrentGameQuery = (\n  { __typename?: 'Query' }\n  & { currentGame?: Maybe<(\n    { __typename?: 'ChessClass' }\n    & Pick<ChessClass, '_id' | 'lastPosition'>\n    & { white: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ), black: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ) }\n  )> }\n);\n\nexport type GameStatusQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GameStatusQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'GameStatus'>\n);\n\nexport type HistoryQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HistoryQuery = (\n  { __typename?: 'Query' }\n  & { historyGames?: Maybe<Array<(\n    { __typename?: 'ChessClass' }\n    & Pick<ChessClass, '_id' | 'isGameRunning' | 'listOfPositions'>\n    & { white: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ), black: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ) }\n  )>> }\n);\n\nexport type InvitationsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type InvitationsQuery = (\n  { __typename?: 'Query' }\n  & { invitationsOfUser?: Maybe<Array<(\n    { __typename?: 'InvitationClass' }\n    & { host: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ), friend: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ) }\n  )>> }\n);\n\nexport type GameStartedSubscriptionVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type GameStartedSubscription = (\n  { __typename?: 'Subscription' }\n  & Pick<Subscription, 'gameStarted'>\n);\n\nexport type MoveSubscriptionVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type MoveSubscription = (\n  { __typename?: 'Subscription' }\n  & Pick<Subscription, 'move'>\n);\n\nexport type NewInvitationSubscriptionVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type NewInvitationSubscription = (\n  { __typename?: 'Subscription' }\n  & { newInvitation?: Maybe<(\n    { __typename?: 'InvitationClass' }\n    & { host: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ), friend: (\n      { __typename?: 'UserClass' }\n      & UserFragmentFragment\n    ) }\n  )> }\n);\n\nexport const ErrorFragmentFragmentDoc = gql`\n    fragment ErrorFragment on FieldError {\n  field\n  message\n}\n    `;\nexport const UserFragmentFragmentDoc = gql`\n    fragment UserFragment on UserClass {\n  _id\n  username\n  email\n  gameStatus\n}\n    `;\nexport const CancelInvitationDocument = gql`\n    mutation CancelInvitation {\n  cancelInvitation\n}\n    `;\n\nexport function useCancelInvitationMutation() {\n  return Urql.useMutation<CancelInvitationMutation, CancelInvitationMutationVariables>(CancelInvitationDocument);\n};\nexport const AcceptInvitationDocument = gql`\n    mutation AcceptInvitation($hostID: String!) {\n  acceptInvitation(hostID: $hostID)\n}\n    `;\n\nexport function useAcceptInvitationMutation() {\n  return Urql.useMutation<AcceptInvitationMutation, AcceptInvitationMutationVariables>(AcceptInvitationDocument);\n};\nexport const EndGameDocument = gql`\n    mutation EndGame($chessID: String!) {\n  endGame(chessID: $chessID)\n}\n    `;\n\nexport function useEndGameMutation() {\n  return Urql.useMutation<EndGameMutation, EndGameMutationVariables>(EndGameDocument);\n};\nexport const InvalidateQueryDocument = gql`\n    mutation InvalidateQuery {\n  invalidateQuery\n}\n    `;\n\nexport function useInvalidateQueryMutation() {\n  return Urql.useMutation<InvalidateQueryMutation, InvalidateQueryMutationVariables>(InvalidateQueryDocument);\n};\nexport const InviteDocument = gql`\n    mutation Invite($email: String!) {\n  invite(email: $email) {\n    errors {\n      ...ErrorFragment\n    }\n  }\n}\n    ${ErrorFragmentFragmentDoc}`;\n\nexport function useInviteMutation() {\n  return Urql.useMutation<InviteMutation, InviteMutationVariables>(InviteDocument);\n};\nexport const LoginDocument = gql`\n    mutation Login($token: String!) {\n  login(token: $token) {\n    errors {\n      ...ErrorFragment\n    }\n    user {\n      ...UserFragment\n    }\n  }\n}\n    ${ErrorFragmentFragmentDoc}\n${UserFragmentFragmentDoc}`;\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const SaveMoveDocument = gql`\n    mutation SaveMove($chessID: String!, $position: String!, $move: String!) {\n  saveMove(chessID: $chessID, position: $position, move: $move)\n}\n    `;\n\nexport function useSaveMoveMutation() {\n  return Urql.useMutation<SaveMoveMutation, SaveMoveMutationVariables>(SaveMoveDocument);\n};\nexport const MeDocument = gql`\n    query Me {\n  me {\n    ...UserFragment\n  }\n}\n    ${UserFragmentFragmentDoc}`;\n\nexport function useMeQuery(options: Omit<Urql.UseQueryArgs<MeQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MeQuery>({ query: MeDocument, ...options });\n};\nexport const CurrentGameDocument = gql`\n    query CurrentGame {\n  currentGame {\n    _id\n    lastPosition\n    white {\n      ...UserFragment\n    }\n    black {\n      ...UserFragment\n    }\n  }\n}\n    ${UserFragmentFragmentDoc}`;\n\nexport function useCurrentGameQuery(options: Omit<Urql.UseQueryArgs<CurrentGameQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<CurrentGameQuery>({ query: CurrentGameDocument, ...options });\n};\nexport const GameStatusDocument = gql`\n    query GameStatus {\n  GameStatus\n}\n    `;\n\nexport function useGameStatusQuery(options: Omit<Urql.UseQueryArgs<GameStatusQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GameStatusQuery>({ query: GameStatusDocument, ...options });\n};\nexport const HistoryDocument = gql`\n    query History {\n  historyGames {\n    _id\n    isGameRunning\n    listOfPositions\n    white {\n      ...UserFragment\n    }\n    black {\n      ...UserFragment\n    }\n  }\n}\n    ${UserFragmentFragmentDoc}`;\n\nexport function useHistoryQuery(options: Omit<Urql.UseQueryArgs<HistoryQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<HistoryQuery>({ query: HistoryDocument, ...options });\n};\nexport const InvitationsDocument = gql`\n    query Invitations {\n  invitationsOfUser {\n    host {\n      ...UserFragment\n    }\n    friend {\n      ...UserFragment\n    }\n  }\n}\n    ${UserFragmentFragmentDoc}`;\n\nexport function useInvitationsQuery(options: Omit<Urql.UseQueryArgs<InvitationsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<InvitationsQuery>({ query: InvitationsDocument, ...options });\n};\nexport const GameStartedDocument = gql`\n    subscription GameStarted($id: String!) {\n  gameStarted(id: $id)\n}\n    `;\n\nexport function useGameStartedSubscription<TData = GameStartedSubscription>(options: Omit<Urql.UseSubscriptionArgs<GameStartedSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<GameStartedSubscription, TData>) {\n  return Urql.useSubscription<GameStartedSubscription, TData, GameStartedSubscriptionVariables>({ query: GameStartedDocument, ...options }, handler);\n};\nexport const MoveDocument = gql`\n    subscription Move($id: String!) {\n  move(id: $id)\n}\n    `;\n\nexport function useMoveSubscription<TData = MoveSubscription>(options: Omit<Urql.UseSubscriptionArgs<MoveSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<MoveSubscription, TData>) {\n  return Urql.useSubscription<MoveSubscription, TData, MoveSubscriptionVariables>({ query: MoveDocument, ...options }, handler);\n};\nexport const NewInvitationDocument = gql`\n    subscription NewInvitation($id: String!) {\n  newInvitation(id: $id) {\n    host {\n      ...UserFragment\n    }\n    friend {\n      ...UserFragment\n    }\n  }\n}\n    ${UserFragmentFragmentDoc}`;\n\nexport function useNewInvitationSubscription<TData = NewInvitationSubscription>(options: Omit<Urql.UseSubscriptionArgs<NewInvitationSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<NewInvitationSubscription, TData>) {\n  return Urql.useSubscription<NewInvitationSubscription, TData, NewInvitationSubscriptionVariables>({ query: NewInvitationDocument, ...options }, handler);\n};"],"sourceRoot":""}