{"version":3,"sources":["utils/useIsAuth.ts","pages/history/ShowChess.tsx","pages/history/Table.tsx","pages/history/index.tsx"],"names":["useIsAuth","useMeQuery","data","fetching","useState","isAuth","setIsAuth","useEffect","me","useStyles","makeStyles","theme","root","align","display","justifyContent","flexDirection","alignItems","buttons","margin","ShowChess","setOpen","open","positions","InitialPosition","positionValue","setPositionValue","number","setNumber","classes","reverse","Dialog","onClose","aria-labelledby","className","position","width","Button","color","variant","size","disabled","onClick","prev","length","StyledTableCell","withStyles","head","backgroundColor","palette","primary","main","common","white","body","fontSize","TableCell","StyledTableRow","light","secondary","TableRow","table","minWidth","accept","decline","CustomizedTables","rows","setPositions","Fragment","TableContainer","Table","aria-label","TableHead","TableBody","map","row","index","component","scope","name","handleOpen","History","useHistoryQuery","historyGames","obj","_id","black","username","email","listOfPositions","Typography"],"mappings":"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","file":"static/js/7.6032a513.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useMeQuery } from \"../generated/graphql\";\r\n\r\nexport const useIsAuth = () => {\r\n  const [{ data, fetching }] = useMeQuery();\r\n  const [isAuth, setIsAuth] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (fetching || !data?.me) {\r\n      setIsAuth(false);\r\n    } else {\r\n      setIsAuth(true);\r\n    }\r\n  }, [fetching, data]);\r\n  return isAuth;\r\n};\r\n","import { Button, Dialog } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\ninterface ShowChessProps {\r\n  setOpen: Function;\r\n  open: boolean;\r\n  positions: Array<string>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    align: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttons: {\r\n    margin: \"10px 10px\",\r\n  },\r\n}));\r\n\r\nconst ShowChess: React.FC<ShowChessProps> = ({ setOpen, open, positions }) => {\r\n  const InitialPosition =\r\n    \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\n  const [positionValue, setPositionValue] = useState<string>(InitialPosition);\r\n  const [number, setNumber] = useState<number>(0);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setPositionValue(InitialPosition);\r\n    setNumber(0)\r\n  }, [positions]);\r\n  const classes = useStyles();\r\n  positions.reverse();\r\n  positions = [InitialPosition, ...positions];\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <div className={classes.root}>\r\n        <Chessboard position={positionValue} width={400} />\r\n        <div>\r\n          <Button\r\n            className={classes.buttons}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={number === 0}\r\n            onClick={() => {\r\n              setPositionValue(positions[number - 1]);\r\n              setNumber((prev) => prev - 1);\r\n            }}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            className={classes.buttons}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={number === positions.length - 1}\r\n            onClick={() => {\r\n              setPositionValue(positions[number + 1]);\r\n              setNumber((prev) => prev + 1);\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShowChess;\r\n","import React, { useState } from \"react\";\r\nimport { withStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ShowChess from \"./ShowChess\";\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"&:nth-of-type(even)\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  accept: {\r\n    color: \"green\",\r\n    margin: \"0 5px\",\r\n  },\r\n  decline: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nexport interface RowType {\r\n  name: string;\r\n  positions: string[];\r\n}\r\n\r\ninterface CustomizedTablesProp {\r\n  rows: Array<RowType>;\r\n}\r\n\r\nconst CustomizedTables: React.FC<CustomizedTablesProp> = ({ rows }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [positions, setPositions] = useState<Array<string>>([]);\r\n  const handleOpen = (positions: string[]) => {\r\n    setPositions([...positions]);\r\n    setOpen(true)\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ShowChess open={open} setOpen={setOpen} positions={positions} />\r\n      <TableContainer>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Sr. No.</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Played With</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <StyledTableRow key={row.name}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {index + 1}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" scope=\"row\">\r\n                  {row.name}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.accept}\r\n                    onClick={() => handleOpen(row.positions)}\r\n                  >\r\n                    Watch\r\n                  </Button>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomizedTables;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistoryQuery, useMeQuery } from \"../../generated/graphql\";\r\nimport { useIsAuth } from \"../../utils/useIsAuth\";\r\nimport CustomizedTables, { RowType } from \"./Table\";\r\n\r\ninterface HistoryProps {}\r\n\r\nconst History: React.FC<HistoryProps> = () => {\r\n  const [{ data, fetching }] = useHistoryQuery();\r\n  const [{ data: me }] = useMeQuery();\r\n  const isAuth = useIsAuth();\r\n  let body = null;\r\n  let rows: Array<RowType> = [];\r\n\r\n  if (!fetching && data?.historyGames) {\r\n    rows = data?.historyGames?.map((obj) => {\r\n      let name = \"\";\r\n      if (me?.me?._id === obj.white._id) {\r\n        name = `${obj.black.username} (${obj.black.email}) as White`;\r\n      } else {\r\n        name = `${obj.white.username} (${obj.white.email}) as Black`;\r\n      }\r\n      return {\r\n        name: name,\r\n        positions: obj?.listOfPositions || [],\r\n      };\r\n    });\r\n  }\r\n  if (!isAuth) {\r\n    body = (\r\n      <Typography align=\"center\">\r\n        Please Login to see your Game History\r\n      </Typography>\r\n    );\r\n  } else {\r\n    body = <CustomizedTables rows={rows} />;\r\n  }\r\n  return <React.Fragment>{body}</React.Fragment>;\r\n};\r\n\r\nexport default History;\r\n"],"sourceRoot":""}