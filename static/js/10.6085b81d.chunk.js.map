{"version":3,"sources":["pages/game/InvitationForm.tsx","pages/game/Information.tsx","pages/game/ChessGame.tsx","pages/game/RunningGame.tsx","pages/game/Waiting.tsx","pages/game/index.tsx"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","margin","wrapper","spacing","position","buttonProgress","color","palette","secondary","main","top","left","marginTop","marginLeft","InvitationForm","classes","useInviteMutation","Invite","initialValues","friend","onSubmit","values","actions","a","email","response","data","invite","errors","setErrors","message","setValues","setSubmitting","handleChange","isSubmitting","FormControl","className","TextField","error","id","name","label","helperText","variant","onChange","value","Button","disabled","type","CircularProgress","size","flexDirection","alignItems","Information","status","useState","infoLevel","setInfoLevel","body","Fragment","onClick","Typography","align","Chess","require","ChessGame","currentGame","useCurrentGameQuery","currentGameData","fetching","useMeQuery","me","useInvalidateQueryMutation","invalidateQuery","useGameStartedSubscription","variables","_id","_","gameStarted","lastPosition","chess","fen","setFen","useSaveMoveMutation","saveMove","useMoveSubscription","move","objectMove","JSON","parse","setTimeout","username","player","white","opponent","black","playingAs","style","split","width","onDrop","valid","piece","MoveString","stringify","chessID","handleMove","from","sourceSquare","to","targetSquare","promotion","buttons","RunningGame","useEndGameMutation","endGame","undefined","Waiting","useCancelInvitationMutation","cancelInvitation","Game","useGameStatusQuery","GameStatus"],"mappings":"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","file":"static/js/10.6085b81d.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport React from \"react\";\r\nimport { useInviteMutation } from \"../../generated/graphql\";\r\n\r\nconst useStyles = makeStyles((theme:Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"20px\",\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.secondary.main,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nconst InvitationForm = () => {\r\n  const classes = useStyles();\r\n  const [, Invite] = useInviteMutation();\r\n  return (\r\n    <Formik\r\n      initialValues={{ friend: \"\" }}\r\n      onSubmit={async (values, actions) => {\r\n        let response = await Invite({ email: values.friend });\r\n        if (response.data?.invite.errors) {\r\n          actions.setErrors({\r\n            friend: response.data.invite.errors[0].message,\r\n          });\r\n        } else {\r\n          actions.setValues({ friend: \"\" });\r\n        }\r\n        actions.setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, errors, handleChange, isSubmitting }) => (\r\n        <Form>\r\n          <FormControl>\r\n            <div className={classes.root}>\r\n              <TextField\r\n                error={!!errors[\"friend\"]}\r\n                id=\"friend\"\r\n                name=\"friend\"\r\n                label=\"Friend's Email\"\r\n                helperText={errors[\"friend\"]}\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                value={values.friend}\r\n              />\r\n              <div className={classes.wrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disabled={isSubmitting}\r\n                  type=\"submit\"\r\n                >\r\n                  Invite\r\n                </Button>\r\n                {isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </FormControl>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default InvitationForm;\r\n","import { Button, makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport InvitationForm from \"./InvitationForm\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface InformationProps {\r\n  status: Number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"20px\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Information: React.FC<InformationProps> = ({ status }) => {\r\n  const classes = useStyles();\r\n  const [infoLevel, setInfoLevel] = useState<1 | 0>(0);\r\n  let body = null;\r\n  if (infoLevel === 0 || status === -1) {\r\n    body = (\r\n      <React.Fragment>\r\n        <div className={classes.root}>\r\n          <Button\r\n            onClick={() => {\r\n              setInfoLevel(1);\r\n            }}\r\n            disabled={status === -1}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n          >\r\n            Start New Game\r\n          </Button>\r\n          <Typography variant=\"body2\">\r\n            {status === -1 ? \"Please Login to start the Game\" : \"\"}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n          <br />\r\n            You can send Invitation to your friend using Email, Please ask your\r\n            friend to login once if he/she hasn't even once.\r\n          </Typography>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    body = (\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Invite Your Friend\r\n          <InvitationForm />\r\n        </Typography>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return <React.Fragment>{body}</React.Fragment>;\r\n};\r\n\r\nexport default Information;\r\n","import React, { useState } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport { ChessInstance, ShortMove } from \"chess.js\";\r\nimport {\r\n  ChessClass,\r\n  useCurrentGameQuery,\r\n  useGameStartedSubscription,\r\n  useInvalidateQueryMutation,\r\n  useMeQuery,\r\n  useMoveSubscription,\r\n  useSaveMoveMutation,\r\n} from \"../../generated/graphql\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Chess = require(\"chess.js\");\r\ninterface ChessGameProps {\r\n  currentGame: ChessClass | any;\r\n}\r\n\r\nconst ChessGame: React.FC<ChessGameProps> = ({ currentGame }) => {\r\n  const [{ data: currentGameData, fetching }] =\r\n    useCurrentGameQuery();\r\n  const [{ data: me }] = useMeQuery();\r\n  const [, invalidateQuery] = useInvalidateQueryMutation();\r\n  useGameStartedSubscription(\r\n    {\r\n      variables: {\r\n        id: me?.me?._id || \"\",\r\n      },\r\n    },\r\n    (_, response) => {\r\n      if (response?.gameStarted) {\r\n        invalidateQuery();\r\n      }\r\n      return response;\r\n    }\r\n  );\r\n  const [chess] = useState<ChessInstance>(\r\n    new Chess(\r\n      (!fetching && currentGameData?.currentGame?.lastPosition) ||\r\n        \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\r\n    )\r\n  );\r\n\r\n  const [fen, setFen] = useState(chess.fen());\r\n  const [, saveMove] = useSaveMoveMutation();\r\n  useMoveSubscription(\r\n    {\r\n      variables: { id: me?.me?._id || \"\" },\r\n    },\r\n    (_, data) => {\r\n      if (data.move) {\r\n        const objectMove = JSON.parse(data.move);\r\n        if (chess.move(objectMove)) {\r\n          setTimeout(() => {\r\n            setFen(chess.fen());\r\n          }, 300);\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n  );\r\n\r\n  const player = {\r\n    username: me?.me?.username,\r\n    playingAs: me?.me?._id === currentGame.white._id ? \"w\" : \"b\",\r\n  };\r\n\r\n  const opponent = {\r\n    username:\r\n      player.playingAs === \"w\"\r\n        ? currentGame.black.username\r\n        : currentGame.white.username,\r\n    playingAs: player.playingAs === \"w\" ? \"b\" : \"w\",\r\n  };\r\n\r\n  const handleMove = (move: ShortMove) => {\r\n    if (chess.move(move)) {\r\n      setFen(chess.fen());\r\n      const MoveString = JSON.stringify(move);\r\n      saveMove({\r\n        chessID: currentGame._id,\r\n        position: chess.fen(),\r\n        move: MoveString,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-center\">\r\n      <Typography variant=\"h5\" align=\"center\" style={{ margin: \"10px\" }}>\r\n        You vs {opponent.username}\r\n      </Typography>\r\n      <Typography variant=\"h6\" align=\"center\" style={{ margin: \"10px\" }}>\r\n        {fen.split(\" \")[1] === player.playingAs\r\n          ? \"Your Turn\"\r\n          : \"Waiting for opponent to move\"}\r\n      </Typography>\r\n      <Chessboard\r\n        width={400}\r\n        position={fen}\r\n        onDrop={(move) => {\r\n          let valid = false;\r\n          if (move.piece[0] === \"w\" && me?.me?._id === currentGame.white._id) {\r\n            valid = true;\r\n          }\r\n          if (move.piece[0] === \"b\" && me?.me?._id === currentGame.black._id) {\r\n            valid = true;\r\n          }\r\n          if (valid)\r\n            handleMove({\r\n              from: move.sourceSquare,\r\n              to: move.targetSquare,\r\n              promotion: \"q\",\r\n            });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessGame;\r\n","import { Button, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  useCurrentGameQuery,\r\n  useEndGameMutation,\r\n} from \"../../generated/graphql\";\r\nimport ChessGame from \"./ChessGame\";\r\n\r\ninterface RunningGameProps {}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    align: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttons: {\r\n    margin: \"10px 10px\",\r\n  },\r\n}));\r\nconst RunningGame: React.FC<RunningGameProps> = () => {\r\n  const [, endGame] = useEndGameMutation();\r\n  const classes = useStyles();\r\n  const [{ data, fetching }] = useCurrentGameQuery();\r\n  let body = null;\r\n  if (!fetching && data?.currentGame !== undefined) {\r\n    body = (\r\n      <React.Fragment>\r\n        <div className={classes.root}>\r\n          <Button\r\n            onClick={() => {\r\n              endGame({ chessID: data.currentGame?._id || \"\" });\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n          >\r\n            End Game\r\n          </Button>\r\n          <ChessGame currentGame={data.currentGame} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <React.Fragment>{body}</React.Fragment>;\r\n};\r\n\r\nexport default RunningGame;\r\n","import { Button, makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useCancelInvitationMutation } from \"../../generated/graphql\";\r\n\r\ninterface WaitingProps {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"20px\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Waiting: React.FC<WaitingProps> = () => {\r\n  const classes = useStyles();\r\n  const [, cancelInvitation] = useCancelInvitationMutation();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography>Waiting for your friend to start the game...</Typography>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        onClick={() => cancelInvitation()}\r\n      >\r\n        Cancel Invitation\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","import React from \"react\";\r\nimport {\r\n  useGameStartedSubscription,\r\n  useGameStatusQuery,\r\n  useInvalidateQueryMutation,\r\n  useMeQuery,\r\n} from \"../../generated/graphql\";\r\nimport Information from \"./Information\";\r\nimport RunningGame from \"./RunningGame\";\r\nimport Waiting from \"./Waiting\";\r\n\r\nconst Game = () => {\r\n  const [{ data, fetching }] = useGameStatusQuery();\r\n  let body = null;\r\n  const [{ data: me }] = useMeQuery();\r\n  const [, invalidateQuery] = useInvalidateQueryMutation();\r\n  useGameStartedSubscription(\r\n    {\r\n      variables: {\r\n        id: me?.me?._id || \"\",\r\n      },\r\n    },\r\n    (_, response) => {\r\n      if (response?.gameStarted) {\r\n        invalidateQuery();\r\n      }\r\n      return response;\r\n    }\r\n  );\r\n  if (!fetching) {\r\n    if (\r\n      !data?.GameStatus ||\r\n      data?.GameStatus === 0 ||\r\n      data?.GameStatus === -1\r\n    ) {\r\n      body = <Information status={data ? data.GameStatus : -1} />;\r\n    } else if (data.GameStatus === 1) {\r\n      body = <Waiting />;\r\n    } else if (data.GameStatus === 2) {\r\n      body = <RunningGame></RunningGame>;\r\n    }\r\n  }\r\n  return <React.Fragment>{body}</React.Fragment>;\r\n};\r\n\r\nexport default Game;\r\n"],"sourceRoot":""}