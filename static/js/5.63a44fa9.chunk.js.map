{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","utils/useIsAuth.ts","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","pages/invitations/Table.tsx","pages/invitations/index.tsx"],"names":["Tablelvl2Context","React","TableContext","useIsAuth","useMeQuery","data","fetching","useState","isAuth","setIsAuth","useEffect","me","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","TableCell","props","ref","role","Component","_props$align","align","classes","className","component","paddingProp","padding","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","other","_objectWithoutProperties","table","tablelvl2","isHeadCell","ariaSort","clsx","root","concat","capitalize","stickyHeader","withStyles","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","lighten","fade","divider","darken","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","name","TableRow","_props$component","_props$hover","hover","_props$selected","selected","outline","action","main","selectedOpacity","TableContainer","overflowX","defaultComponent","Table","_props$padding","_props$size","_props$stickyHeader","Provider","value","borderCollapse","borderSpacing","spacing","captionSide","TableHead","TableBody","StyledTableCell","common","white","StyledTableRow","light","useStyles","minWidth","accept","margin","decline","CustomizedTables","rows","history","useHistory","useAcceptInvitationMutation","aria-label","map","row","index","Button","onClick","hostID","HostID","push","Playground","useInvitationsQuery","useNewInvitationSubscription","variables","id","_id","rows2","invitationsOfUser","obj","host","username","email","newInvitation","Typography","Fragment"],"mappings":"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","file":"static/js/5.63a44fa9.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import { useEffect, useState } from \"react\";\r\nimport { useMeQuery } from \"../generated/graphql\";\r\n\r\nexport const useIsAuth = () => {\r\n  const [{ data, fetching }] = useMeQuery();\r\n  const [isAuth, setIsAuth] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (fetching || !data?.me) {\r\n      setIsAuth(false);\r\n    } else {\r\n      setIsAuth(true);\r\n    }\r\n  }, [fetching, data]);\r\n  return isAuth;\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React from \"react\";\r\nimport { withStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useAcceptInvitationMutation } from \"../../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"&:nth-of-type(even)\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  accept: {\r\n    color: \"green\",\r\n    margin: \"0 5px\",\r\n  },\r\n  decline: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nexport interface RowType {\r\n  name: string;\r\n  HostID: string;\r\n}\r\n\r\ninterface CustomizedTablesProp {\r\n  rows: Array<RowType>;\r\n}\r\n\r\nconst CustomizedTables: React.FC<CustomizedTablesProp> = ({ rows }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [, accept] = useAcceptInvitationMutation();\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Sr. No.</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Invited From</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {index + 1}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                <Button\r\n                  onClick={() => {\r\n                    accept({ hostID: row.HostID });\r\n                    history.push(\"/game\");\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.accept}\r\n                >\r\n                  Accept\r\n                </Button>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CustomizedTables;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  useInvitationsQuery,\r\n  useMeQuery,\r\n  useNewInvitationSubscription,\r\n} from \"../../generated/graphql\";\r\nimport { useIsAuth } from \"../../utils/useIsAuth\";\r\nimport CustomizedTables, { RowType } from \"./Table\";\r\n\r\nconst Playground: React.FC = () => {\r\n  const [{ data, fetching }] = useInvitationsQuery();\r\n  const [{ data: me }] = useMeQuery();\r\n  const isAuth = useIsAuth();\r\n  let body = null;\r\n  let rows: Array<RowType> = [];\r\n\r\n  const [rows2] = useNewInvitationSubscription({\r\n    variables: {\r\n      id: me?.me?._id || \"\",\r\n    },\r\n  });\r\n  if (!fetching && data?.invitationsOfUser) {\r\n    rows = data?.invitationsOfUser?.map((obj) => ({\r\n      name: `${obj.host.username} (${obj.host.email})`,\r\n      HostID: `${obj.host._id}`,\r\n    }));\r\n  }\r\n  if (rows2.data?.newInvitation) {\r\n    rows.push({\r\n      name: `${rows2.data?.newInvitation.host.username} (${rows2.data?.newInvitation.host.email})`,\r\n      HostID: `${rows2.data?.newInvitation.host._id}`,\r\n    });\r\n  }\r\n  if (!isAuth) {\r\n    body = (\r\n      <Typography align=\"center\">\r\n        Please Login to see your Invitations\r\n      </Typography>\r\n    );\r\n  } else {\r\n    body = <CustomizedTables rows={rows} />;\r\n  }\r\n  return <React.Fragment>{body}</React.Fragment>;\r\n};\r\n\r\nexport default Playground;\r\n"],"sourceRoot":""}